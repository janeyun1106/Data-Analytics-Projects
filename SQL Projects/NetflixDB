
CREATE TABLE Department (
    Department_ID INT NOT NULL PRIMARY KEY,
    Department_Name VARCHAR(300) NOT NULL
);


Create Table Employee ( 
Employee_ID Int not null,
E_first_name varchar(22) not null,
E_last_name varchar(22) not null,
Department_Name varchar(300) not null,
Role varchar(50) not null, 
Work_Email varchar(50) not null,
Date_Employment date not null,
Department_ID int not null ,
primary key (Employee_ID),
key Department_ID (Department_ID),
foreign key (Department_ID) references Department (Department_ID)
);


CREATE TABLE Users(
User_id int(11) NOT NULL,
user_name varchar(100) NOT NULL,
email varchar(100) NOT NULL,
user_phone_number varchar(50) NOT NULL,
date_of_birth date NOT NULL,
employee_ID int(11) NOT NULL,
age smallint NOT NULL,
gender varchar(20) NOT NULL,
PRIMARY KEY (user_id),
KEY employee_ID (employee_ID),
FOREIGN KEY (employee_ID) REFERENCES employee (employee_ID)
);

CREATE TABLE Subscription (
    Subscription_ID INT NOT NULL,
    User_ID INT NOT NULL,
    Payment_Type VARCHAR(20) NOT NULL,
    Card_Number CHAR(20) NOT NULL,
    Transaction_ID VARCHAR(20) NOT NULL,
    Subscription_Type VARCHAR(20) NOT NULL,
    PRIMARY KEY (Subscription_ID),
    KEY User_ID (User_ID),
    FOREIGN KEY (User_ID) REFERENCES Users (User_ID)
);

CREATE TABLE salaries (
    Salary_ID VARCHAR(20) PRIMARY KEY NOT NULL,
    Employee_ID INT NOT NULL,
    Salary_Number INT NOT NULL,
    Bonus INT NOT NULL,
    Tax_info INT NOT NULL,
    Total_Earning INT NOT NULL,
    FOREIGN KEY (Employee_ID) REFERENCES Employee (Employee_ID)
);

Create Table Actor ( 
Actor_ID Int not null,
Actor_First_Name varchar(22) not null,
Actor_Last_Name varchar(22) not null,
primary key (Actor_ID)
);



Create Table Director  ( 
Director_ID  Int not null,
Director_First_Name varchar(22) not null,
Director_last_name varchar(22) not null,
Gender varchar(22) not null, 
primary key (Director_ID)
);



CREATE TABLE Region (
Region_ID INT NOT NULL PRIMARY KEY,
Region_NAME TINYTEXT NOT NULL,
Region_Language TINYTEXT NOT NULL
);



CREATE TABLE genre (
    Genre_ID INT PRIMARY KEY NOT NULL,
    Genre_name VARCHAR(200) NOT NULL,
    Description TEXT NOT NULL
);

CREATE TABLE Movies (
    Movie_ID INT PRIMARY KEY,
    Name VARCHAR(255),
    Actor_ID INT,
    Director_ID INT,
    Genre_ID INT,
    Region_ID INT,
    Year_of_Release INT,
    Rating DECIMAL(3,1),
    FOREIGN KEY (Actor_ID) REFERENCES Actor(Actor_ID),
    FOREIGN KEY (Director_ID) REFERENCES Director(Director_ID),
    FOREIGN KEY (Genre_ID) REFERENCES Genre(Genre_ID),
    FOREIGN KEY (Region_ID) REFERENCES Region(Region_ID)
);



 CREATE TABLE Awards (
    Award_ID INT PRIMARY KEY ,
    Award_Category VARCHAR(255),
    Award_Name VARCHAR(255),
    Award_Year INT,
    Actor_ID INT,
    Movie_ID INT,
    Award_Winners INT,
    FOREIGN KEY (Actor_ID) REFERENCES Actor(Actor_ID),
    FOREIGN KEY (Movie_ID) REFERENCES Movies(Movie_ID)
);



CREATE TABLE watch_history (
    History_ID BIGINT NOT Null PRIMARY KEY,
    User_ID INT not null,
    Movie_ID INT not null,
    Date DATE not null,
    FOREIGN KEY (User_ID) REFERENCES Users(user_ID),
	FOREIGN KEY (Movie_ID) REFERENCES Movies(Movie_ID)

);

INSERT INTO Region
VALUES
('421','Slovakia','Slovak'),
('359','Bulgaria','Bulgarian'),
('371','Latvia','Latvian'),
('372','Estonia','Estonian'),
('354','Iceland','Icelandic'),
('370','Lithuania','Lithuanian'),
('40','Romania','Romanian'),
('44','United Kingdom','English'),
('351','Portugal','Portuguese'),
('353','Ireland','Irish'),
('34','Spanin','Spanish'),
('49','Germany','German'),
('36','Hungary','Hungarian'),
('39','Italy','Italian'),
('43','Austria','German'),
('41','Switzerland','German'),
('63','Philippines','Tagalog'),
('30','Greece','Greek'),
('31','Netherlands','Dutch'),
('33','France','French');

INSERT INTO Department (Department_ID, Department_Name)
VALUES
(101, 'Marketing and Promotions'),
(102, 'Human Resources'),
(103, 'Finance and Accounting'),
(104, 'Business Development'),
(105, 'Content Acquisition and Licensing'),
(106, 'Content Production'),
(107, 'Customer Support'),
(108, 'Technology and Engineering'),
(109, 'Legal and Compliance'),
(110, 'Research and Development'),
(111, 'Social Media and Community Management'),
(112, 'Information Security'),
(113, 'Data Analytics'),
(114, 'Public Relations'),
(115, 'Risk Management'),
(116, 'Partnerships'),
(117, 'Data Privacy and Security'),
(118, 'IT Support'),
(119, 'Diversity and Inclusion'),
(120, 'Merger and Acquisitions');

INSERT INTO actor (Actor_ID, Actor_First_Name, Actor_Last_Name) VALUES
(20100, 'Taec-yeon', 'OK'),
(20101, 'Beanie', 'Feldstein'),
(20102, 'Genesis', 'Rodriguez'),
(20103, 'Hanna', 'Van Vliet'),
(20104, 'Hadley', 'Robinson'),
(20105, 'Nadech', 'Kugimiya'),
(20106, 'Marcin', 'Dorocinski'),
(20107, 'Danuta', 'Stenka'),
(20108, 'Ava', 'Dahlbeck'),
(20109, 'Lasse', 'Aberg'),
(20110, 'Andreas', 'Hoffer'),
(20111, 'Justin', 'Chatwin'),
(20112, 'Stellan', 'Skarsgard'),
(20113, 'Lasse', 'Aberg'),
(20114, 'Karl', 'Erik'),
(20115, 'Joaquin', 'Phoenix'),
(20116, 'Chiyaan', 'Vikram'),
(20117, 'Ellen', 'Jelinek'),
(20118, 'Micke', 'Andresson'),
(20119, 'Malin', 'Ek');

INSERT INTO Director (Director_ID, Director_First_Name, Director_Last_Name, Gender)
VALUES
(4001, 'Joon-hwa', 'Park', 'Male'),
(4002, 'Coky', 'Giedroyc', 'Female'),
(4003, 'Brendan', 'Walsh', 'Male'),
(4004, 'Valerie', 'Bisscheroux', 'Female'),
(4005, 'Amy', 'Poehler', 'Female'),
(4006, 'Mez', 'Tharatorn', 'Male'),
(4007, 'Magdalena', 'Lazakiewicz', 'Female'),
(4008, 'Patryk', 'Vega', 'Male'),
(4009, 'Alf', 'Sjoberg', 'Male'),
(4010, 'Lasse', 'Aberg', 'Male'),
(4011, 'Stephan', 'Apelgren', 'Male'),
(4012, 'David', 'S. Goyer', 'Male'),
(4013, 'Hans', 'Alfredson', 'Male'),
(4014, 'Lasse', 'Aberg', 'Male'),
(4015, 'Gosta', 'Werner', 'Male'),
(4016, 'Todd', 'Phillips', 'Male'),
(4017, 'Shankar', 'Shanmugam', 'Male'),
(4018, 'Richard', 'Hobert', 'Male'),
(4019, 'Lasse', 'Hallstrom', 'Male'),
(4020, 'Hans', 'Alfredson', 'Male');



INSERT INTO genre (Genre_ID, Genre_name, Description)
VALUES
(50001, 'Action', 'Fast-paced, adrenaline-filled heroics.'),
(50002, 'Comedy', 'Light-hearted humor and laughter.'),
(50003, 'Drama', 'Emotional, character-driven stories.'),
(50004, 'Sci-Fi', 'Futuristic and speculative worlds.'),
(50005, 'Horror', 'Frightening and suspenseful tales.'),
(50006, 'Romance', 'Heartfelt love stories.'),
(50007, 'Fantasy', 'Magical, imaginative realms.'),
(50008, 'Adventure', 'Thrilling journeys and quests.'),
(50009, 'Thriller', 'Intense, suspenseful narratives.'),
(50010, 'Mystery', 'Puzzle-solving and intrigue.'),
(50011, 'Animation', 'Animated visual storytelling.'),
(50012, 'Documentary', 'Real-world facts and events.'),
(50013, 'Crime', 'Criminal activities and investigations.'),
(50014, 'Musical', 'Music-driven storytelling.'),
(50015, 'Historical', 'Stories from the past.'),
(50016, 'Western', 'Wild West adventures.'),
(50017, 'War', 'Historical wartime dramas.'),
(50018, 'Superhero', 'Powerful heroes and villains.'),
(50019, 'Family', 'Entertainment for all ages.'),
(50020, 'Fantasy', 'Mystical and epic adventures.');

INSERT INTO employee (Employee_ID, E_first_name, E_last_name, Department_name, Role, Work_Email, Date_Employment, Department_ID)
VALUES
(3427, 'Uriah', 'Bridges', 'Marketing and Promotions', 'Marketing Specialist', 'uriah.bridges@netflix.com', '2010-06-17', 101),
(3428, 'Paula', 'Small', 'Human Resources', 'Advisor', 'paula.small@netflix.com', '2007-06-18', 102),
(3429, 'Edward', 'Buck', 'Finance and Accounting', 'Financial Analyst', 'edward.buck@netflix.com', '2012-06-20', 103),
(3430, 'Michael', 'Riordan', 'Business Development', 'Business Analyst', 'michael.riordan@netflix.com', '2012-06-20', 104),
(3431, 'Jasmine', 'Onque', 'Content Acquisition and Licensing', 'Manager', 'jasmine.onque@netflix.com', '2013-07-20', 105),
(3432, 'Maruk', 'Fraval', 'Content Production', 'Producer', 'maruk.fraval@netflix.com', '2011-06-21', 106),
(3433, 'Latia', 'Costa', 'Customer Support', 'Customer Service', 'latia.costa@netflix.com', '2013-06-21', 107),
(3434, 'Sharlene', 'Terry', 'Technology and Engineering', 'IT Support', 'sharlene.terry@netflix.com', '2015-06-21', 108),
(3435, 'Jac', 'McKinzie', 'Legal and Compliance', 'Lawyer', 'jac.mckinzie@netflix.com', '2015-07-21', 109),
(3436, 'Joseph', 'Martins', 'Research and Development', 'Developer', 'joseph.martins@netflix.com', '2015-09-01', 110),
(3437, 'Myriam', 'Givens', 'Social Media and Community Management', 'Specialist', 'myriam.givens@netflix.com', '2013-09-01', 111),
(3438, 'Dheepa', 'Nguyen', 'Information Security', 'Manager', 'dheepa.nguyen@netflix.com', '2013-07-20', 112),
(3439, 'Bartholemew', 'Khemmich', 'Data Analytics', 'Analyst', 'khemmich@netflix.com', '2012-07-21', 113),
(3440, 'Xana', 'Potts', 'Public Relations', 'Specialist', 'xana.potts@netflix.com', '2017-07-25', 114),
(3441, 'Prater','Jeremy', 'Risk Management', 'Analyst', 'prater.jeremy@netflix.com', '2017-07-04', 115),
(3442, 'Kaylah', 'Moon', 'Partnerships', 'Advisor', 'kaylah.moon@netflix.com', '2016-09-15', 116),
(3443, 'Kristen', 'Tate', 'Data Privacy and Security', 'Cybersecurity', 'kristen.tate@netflix.com', '2017-07-20', 117),
(3444, 'Bobby', 'Rodgers', 'Content Strategy', 'Strategist', 'bobby.rodgers@netflix.com', '2011-06-20', 118),
(3445, 'Reid', 'Park', 'Diversity and Inclusion', 'Advisor', 'reid.park@netflix.com', '2017-07-20', 119),
(3446, 'John', 'Divad', 'Merger and Acquisitions', 'Manager', 'John.Dived@netflix.com', '2014-06-20', 120);



INSERT INTO salaries (Salary_ID, Employee_ID, Salary_Number, Bonus, Tax_info, Total_Earning)
VALUES
('SAL20230013427', 3427, 3500, 500, 700, 3300),
('SAL20230023428', 3428, 4000, 550, 800, 3750),
('SAL20230033429', 3429, 4500, 600, 900, 4200),
('SAL20230043430', 3430, 5000, 650, 1000, 4650),
('SAL20230053431', 3431, 5500, 700, 1100, 5100),
('SAL20230063432', 3432, 6000, 750, 1200, 5550),
('SAL20230073433', 3433, 6500, 800, 1300, 6000),
('SAL20230083434', 3434, 7000, 850, 1400, 6450),
('SAL20230093435', 3435, 3750, 900, 750, 3900),
('SAL20230103436', 3436, 4250, 950, 850, 4350),
('SAL20230113437', 3437, 4750, 525, 950, 4325),
('SAL20230123438', 3438, 5250, 575, 1050, 4775),
('SAL20230133439', 3439, 5750, 625, 1150, 5225),
('SAL20230143440', 3440, 6250, 675, 1250, 5675),
('SAL20230153441', 3441, 6750, 725, 1350, 6125),
('SAL20230163442', 3442, 3900, 775, 780, 3895),
('SAL20230173443', 3443, 4400, 825, 880, 4345),
('SAL20230183444', 3444, 4900, 875, 980, 4795),
('SAL20230193445', 3445, 5400, 925, 1080, 5245),
('SAL20230203446', 3446, 5900, 975, 1180, 5695);



INSERT INTO Users (User_ID, User_name, Email, User_Phone_Number, Date_of_Birth, Employee_ID, Age, Gender)
VALUES
(3001, 'Irma Ortega', 'ortega@gmail.com', '(860) 582-5112', '1979-08-28', 3442, 44, 'Female'),
(3002, 'Hrodperht Haig', 'haig@gmail.com', '(337) 518-5204', '1988-04-21', 3443, 35, 'Male'),
(3003, 'Ayesha Morriss', 'morriss@gmail.com', '(217) 897-9261', '1983-02-06', 3442, 40, 'Female'),
(3004, 'Zümrüd Veronesi', 'veronesi@gmail.com', '(496) 268-7976', '2000-12-13', 3446, 23, 'Male'),
(3005, 'Keanna Sharpe', 'sharpe@gmail.com', '(923) 894-7055', '1994-08-26', 3443, 29, 'Female'),
(3006, 'Aki Nicotera', 'nicotera@gmail.com', '(538) 228-5314', '1995-03-11', 3434, 28, 'Female'),
(3007, 'Ravindra Pham', 'pham@gmail.com', '(602) 786-7340', '1974-05-25', 3443, 49, 'Female'),
(3008, 'Inyene Takeda', 'takeda@gmail.com', '(331) 353-4099', '1976-06-28', 3442, 47, 'Male'),
(3009, 'Gwandoya Gómez', 'gomez@gmail.com', '(541) 948-7408', '2001-03-03', 3442, 22, 'Female'),
(3010, 'Vérène Schwarz', 'schwarz@gmail.com', '(307) 766-8881', '1979-08-03', 3443, 44, 'Female'),
(3011, 'Connla David', 'david@gmail.com', '(879) 529-3867', '1982-05-02', 3434, 41, 'Male'),
(3012, 'Manoj Harrison', 'harrison@gmail.com', '(311) 825-3319', '1982-08-05', 3446, 41, 'Male'),
(3013, 'Lucas Gheorghe', 'gheorghe@gmail.com', '(889) 317-8701', '1990-09-01', 3443, 33, 'Male'),
(3014, 'Reidar Bulle', 'bulle@gmail.com', '(210) 782-7025', '1984-09-22', 3442, 39, 'Female'),
(3015, 'Sidónio Ruane', 'ruane@gmail.com', '(808) 229-9236', '1998-09-26', 3434, 25, 'Female'),
(3016, 'Aimé Melnyk', 'melnyk@gmail.com', '(673) 830-1055', '1979-10-26', 3442, 44, 'Female'),
(3017, 'Reshma Poppins', 'poppins@gmail.com', '(870) 665-3543', '1989-12-31', 3442, 34, 'Female'),
(3018, 'Uma Rocchi', 'rocchi@gmail.com', '(891) 282-8200', '1984-05-13', 3446, 39, 'Male'),
(3019, 'Anton Mitchell', 'mitchell@gmail.com', '(946) 489-5071', '1981-06-25', 3442, 42, 'Male'),
(3020, 'Padrig Vacík', 'vacik@gmail.com', '(886) 286-8458', '1975-10-10', 3434, 48, 'Male');

INSERT INTO Subscription (Subscription_ID, User_ID, Payment_Type, Card_Number, Transaction_ID, Subscription_Type)
VALUES
(98811051, 3001, 'Debit', '5255 0186 4399 5570', 'TRN202301', 'Basic'),
(94440532, 3002, 'Credit', '8157 7134 3810 6720', 'TRN202302', 'Premium'),
(95816337, 3003, 'Credit', '5818 3366 1396 8370', 'TRN202303', 'Standard'),
(92917525, 3004, 'Debit', '7255 6094 2451 2640', 'TRN202304', 'Standard'),
(94779132, 3005, 'Credit', '4435 2929 6603 5740', 'TRN202305', 'Basic'),
(90713579, 3006, 'Debit', '8570 4531 5147 9060', 'TRN202306', 'Premium'),
(93308143, 3007, 'Debit', '7937 0646 9304 4890', 'TRN202307', 'Standard'),
(97186702, 3008, 'Debit', '4467 0562 8005 7740', 'TRN202308', 'Basic'),
(97262726, 3009, 'Credit', '8660 5743 6554 2650', 'TRN202309', 'Standard'),
(96160412, 3010, 'Credit', '5755 2376 7997 7860', 'TRN202310', 'Premium'),
(96717778, 3011, 'Debit', '8982 4868 7242 4110', 'TRN202311', 'Basic'),
(94077295, 3012, 'Debit', '4858 0488 2503 4130', 'TRN202312', 'Premium'),
(93616488, 3013, 'Credit', '7613 1484 7345 3190', 'TRN202313', 'Standard'),
(98455308, 3014, 'Credit', '7286 4072 6722 5480', 'TRN202314', 'Basic'),
(95918743, 3015, 'Credit', '7030 3916 8004 6220', 'TRN202315', 'Standard'),
(94456205, 3016, 'Credit', '5923 4744 9081 3030', 'TRN202316', 'Premium'),
(95253191, 3017, 'Credit', '6442 2532 3536 2590', 'TRN202317', 'Basic'),
(90916317, 3018, 'Debit', '7919 2531 5497 1770', 'TRN202318', 'Standard'),
(91419994, 3019, 'Debit', '5551 1517 4706 3740', 'TRN202319', 'Premium'),
(90616604, 3020, 'Credit', '4541 4394 4757 7490', 'TRN202320', 'Basic');

INSERT INTO movies (Movie_ID, Name, Actor_ID, Director_ID, Genre_ID, Region_ID, Year_of_Release, Rating)
VALUES
(1004, 'Lets Fight Ghost', 20100, 4001, 50001, 421, 2008, 7.9),
(1005, 'HOW TO BUILD A GIRL', 20101, 4002, 50002, 359, 2020, 5.8),
(1006, 'Centigrade', 20102, 4003, 50003, 371, 2020, 4.3),
(1007, 'ANNE+', 20103, 4004, 50004, 372, 2016, 6.5),
(1008, 'Moxie', 20104, 4005, 50005, 354, 2011, 6.3),
(1009, 'The Con-Heartist', 20105, 4006, 50006, 370, 2020, 7.4),
(1010, 'Gleboka woda', 20106, 4007, 50007, 40, 2011, 7.5),
(1011, 'Instynkt', 20107, 4008, 50008, 44, 2011, 3.9),
(1012, 'Only a Mother', 20108, 4009, 50009, 351, 1949, 6.7),
(1013, 'Snowroller', 20109, 4010, 50010, 353, 1985, 6.6),
(1014, 'Sunes Summer', 20110, 4011, 50011, 34, 2018, 5.5),
(1015, 'The Invisible', 20111, 4012, 50012, 49, 2007, 6.2),
(1016, 'The Simple Minded Murderer', 20112, 4013, 50013, 36, 1985, 7.6),
(1017, 'The Stig-Helmer Story', 20113, 4014, 50014, 39, 2011, 4.5),
(1018, 'To Kill a Child', 20114, 4015, 50015, 43, 2011, 7.7),
(1019, 'Joker', 20115, 4016, 50016, 41, 2019, 8.4),
(1020, 'I', 20116, 4017, 50017, 63, 1999, 6.5),
(1021, 'Harrys Daughters', 20117, 4018, 50018, 30, 2011, 8.1),
(1022, 'Gyllene Tider', 20118, 4019, 50019, 31, 1981, 7.7),
(1023, 'False As Water', 20119, 4020, 50020, 33, 1985, 6.3);


    
INSERT INTO watch_history (History_ID, User_ID, Movie_ID, Date)
VALUES
(300120200918, 3001, 1012, '2020-09-18'),
(300220201207, 3002, 1021, '2020-12-07'),
(300320210329, 3003, 1020, '2021-03-29'),
(300420210614, 3004, 1019, '2021-06-14'),
(300520211002, 3005, 1014, '2021-10-02'),
(300620220219, 3006, 1022, '2022-02-19'),
(300720220507, 3007, 1007, '2022-05-07'),
(300820220823, 3008, 1005, '2022-08-23'),
(300920221112, 3009, 1008, '2022-11-12'),
(301020230131, 3010, 1011, '2023-01-31'),
(301120201025, 3011, 1010, '2020-10-25'),
(301220210115, 3012, 1004, '2021-01-15'),
(301320210408, 3013, 1005, '2021-04-08'),
(301420210722, 3014, 1005, '2021-07-22'),
(301520211105, 3015, 1006, '2021-11-05'),
(301620220318, 3016, 1023, '2022-03-18'),
(301720220609, 3017, 1017, '2022-06-09'),
(301820220927, 3018, 1007, '2022-09-27'),
(301920221219, 3019, 1006, '2022-12-19'),
(302020230211, 3020, 1018, '2023-02-11'),
(301020170315, 3010, 1019, '2017-03-15'),
(300820170728, 3008, 1005, '2017-07-28'),
(301720171019, 3017, 1020, '2017-10-19'),
(300620180205, 3006, 1015, '2018-02-05'),
(301420180521, 3014, 1012, '2018-05-21'),
(301120180809, 3011, 1008, '2018-08-09'),
(300420190114, 3004, 1017, '2019-01-14'),
(301920190402, 3019, 1010, '2019-04-02'),
(300520190726, 3005, 1009, '2019-07-26'),
(301520191011, 3015, 1004, '2019-10-11'),
(300720170107, 3007, 1005, '2017-01-07'),
(301220170519, 3012, 1014, '2017-05-19'),
(301620170811, 3016, 1007, '2017-08-11'),
(300920180302, 3009, 1013, '2018-03-02'),
(301020180629, 3010, 1019, '2018-06-29'),
(300320180915, 3003, 1006, '2018-09-15'),
(301820190223, 3018, 1018, '2019-02-23'),
(300220190506, 3002, 1021, '2019-05-06'),
(301320190823, 3013, 1016, '2019-08-23'),
(300520191128, 3005, 1006, '2019-11-28');


INSERT INTO Awards (Award_ID, Award_Category, Award_Name, Award_Year, Actor_ID, Movie_ID, Award_Winners)
VALUES
    (10023, 'Best Picture', 'Oscars', 2022, NULL, 1004, 1),
    (10024, 'Best Actor', 'Oscars', 2022, 20101, NULL, 0),
    (10025, 'Best Actress', 'Oscars', 2022, 20102, NULL, 1),
    (10026, 'Best Supporting Actor', 'Oscars', 2022, 20103, NULL, 0),
    (10027, 'Best Supporting Actress', 'Oscars', 2022, 20104, NULL, 0),
    (10028, 'Best Directing', 'Oscars', 2022, NULL, 1009, 0),
    (10029, 'Best Original Screenplay', 'Oscars', 2022, NULL, 1010, 0),
    (10030, 'Best Adapted Screenplay', 'Oscars', 2022, NULL, 1011, 1),
    (10031, 'Best Cinematography', 'Oscars', 2022, NULL, 1012, 0),
    (10032, 'Best Production Design', 'Oscars', 2022, NULL, 1013, 0),
    (10033, 'Best Editing', 'Oscars', 2022, NULL, 1014, 0),
    (10034, 'Best Original Score', 'Oscars', 2022, NULL, 1015, 1),
    (10035, 'Best Original Song', 'Oscars', 2022, NULL, 1016, 0),
    (10036, 'Best Costume Design', 'Oscars', 2022, NULL, 1017, 0),
    (10037, 'Best Makeup and Hairstyling', 'Oscars', 2022, NULL, 1018, 0),
    (10038, 'Best Sound Mixing', 'Oscars', 2022, NULL, 1019, 1),
    (10039, 'Best Sound Editing', 'Oscars', 2022, NULL, 1020, 0),
    (10040, 'Best Visual Effects', 'Oscars', 2022, NULL, 1021, 0),
    (10041, 'Best Foreign-Language Film', 'Oscars', 2022, NULL, 1022, 1),
    (10042, 'Best Animated-Featured Short', 'Oscars', 2022, NULL, 1023, 0);
    
create VIEW subscription_region_count_view AS
SELECT
    subscription.Subscription_Type,
    region.Region_NAME,
    COUNT(region.Region_NAME) AS count_of_region
FROM subscription
inner join users ON subscription.User_ID = users.User_id
inner join watch_history ON users.User_id = watch_history.User_ID
inner join movies ON watch_history.Movie_ID = movies.Movie_ID
inner join region ON movies.Region_ID = region.Region_ID
group by subscription.Subscription_Type, region.Region_NAME
order by subscription.Subscription_Type;

select age, genre_name,count(genre.Genre_ID)
from users, watch_history,genre, movies
where users.User_id=watch_history.User_ID
and watch_history.Movie_ID=movies.Movie_ID
and movies.Genre_ID=genre.Genre_ID
group by age, genre_name;

SELECT department.Department_Name, avg(Total_Earning)
FROM department, salaries, employee
WHERE employee.Department_ID = department.Department_ID
AND employee.Employee_ID = salaries.Employee_ID
GROUP BY department.Department_Name
ORDER BY AVG(Total_Earning) DESC;

delimiter //
CREATE PROCEDURE GetTopRatingMovies()
BEGIN
	SELECT Movie_ID, Name, Rating
	FROM movies
	WHERE Rating >= 7
	ORDER BY Rating DESC;
END;
//

CALL GetTopRatingMovies();

SELECT Award_Category, Award_Winners, director.Gender AS DirectorGender, users.gender AS UserGender
FROM Awards
INNER JOIN Movies ON Awards.Movie_ID = Movies.Movie_ID
INNER JOIN Watch_History ON Movies.Movie_ID = Watch_History.Movie_ID
INNER JOIN Director ON director.Director_ID = movies.Director_ID
INNER JOIN Users ON Users.User_ID = Watch_History.User_ID
WHERE Award_Winners = 1;

select Name as 'Movie Name' , count(Date) as 'The Number of Watching', Region_NAME as 'Region Name'
from watch_history, movies, region
where watch_history.Movie_ID = movies.Movie_ID
and movies.Region_ID = region.Region_ID
group by movies.Movie_ID
order by count(Date) desc;

CREATE VIEW User_Gender AS
SELECT User_ID, Gender
FROM users;

SELECT Gender, Genre_name
FROM user_gender
INNER JOIN Watch_History ON user_gender.User_ID = Watch_History.User_ID
INNER JOIN Movies ON Movies.Movie_ID = Watch_History.Movie_ID
INNER JOIN Genre ON Movies.Genre_ID = Genre.Genre_ID;

SELECT AVG(YEAR(CURRENT_DATE) - YEAR(u.Date_of_Birth)) AS average_age, g.Genre_name
FROM Users u
JOIN Watch_History wh ON u.User_ID = wh.User_ID
JOIN Movies m ON wh.Movie_ID = m.Movie_ID
JOIN Genre g ON m.Genre_ID = g.Genre_ID
GROUP BY g.Genre_name;

CREATE VIEW SubscriptionMovieWatchSummary AS
SELECT s.Subscription_ID, COUNT(wh.History_ID) AS total_watches
FROM Subscription s
JOIN Users subscriptionmoviewatchsummarycu ON s.User_ID = u.User_ID
JOIN Watch_History wh ON u.User_ID = wh.User_ID
GROUP BY s.Subscription_ID;

select Subscription_Type as 'Subscription Type', count(Subscription_Type) ' The Number of Subscription for Each Type'
from subscription
group by Subscription_Type
order by count(Subscription_Type) desc;

delimiter //
CREATE PROCEDURE TheMostSubscription()
BEGIN
SELECT Subscription_Type as ' Subscription Type' , count(Subscription_Type) as ' The Number of Subscription for Each Type'
from subscription
group by Subscription_Type
having count(Subscription_Type) >= 7
order by count(Subscription_Type) desc;
END;
// 
CALL TheMostSubscription();

